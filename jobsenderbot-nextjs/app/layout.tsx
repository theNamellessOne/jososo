import type { Metadata } from "next";
import localFont from "next/font/local";
import { AuthProvider } from "@/app/(features)/auth/providers";
import { getTokens } from "next-firebase-auth-edge";
import { cookies } from "next/headers";
import { authConfig } from "@/lib/config/server-config";
import { Providers } from "./providers";
import { UserData } from "@/lib";
import { stripeSubscriptionExistsByCustomer } from "@/app/(features)/dashboard";

import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const baseAppUrl = process.env.NEXT_PUBLIC_APP_URL;
  if (!baseAppUrl) {
    process.exit("NEXT_PUBLIC_APP_URL is not set");
  }

  const tokens = await getTokens(cookies(), authConfig);

  const user = tokens?.decodedToken
    ? (tokens.decodedToken as unknown as UserData)
    : null;

  let hasValidSubscription = false;

  if (user) {
    const hasSubscription = await stripeSubscriptionExistsByCustomer(
      user.customerId,
    );

    hasValidSubscription = !!hasSubscription.success && !!hasSubscription.data;
  }

  return (
    <html lang="en" className="h-full dark bg-background text-foreground p-4">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased h-full`}
      >
        <Providers>
          <AuthProvider user={user} hasValidSubscription={hasValidSubscription}>
            {children}
          </AuthProvider>
        </Providers>
      </body>
    </html>
  );
}
